/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode *buildBST(TreeNode *&root, int v)
    {
        if(!root)
            return root = new TreeNode(v);
        if(root->val > v)
            root->left = buildBST(root->left, v);
        else
            root->right = buildBST(root->right, v);
        return root;
    }
    TreeNode* bstFromPreorder(vector<int>& preorder) {
        TreeNode *root, *temp;
        
        root = new TreeNode(preorder[0]);
        temp = root;
        for(int i=1; i<preorder.size(); i++)
        {
            buildBST(root, preorder[i]);
        }
        return root;
    }
};