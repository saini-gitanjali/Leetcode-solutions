class Solution {
public:
    int findLCS(string &str1, string &str2)
	{   
        int n = str1.length(), m = str2.length();
	    int dp[n+1][m+1];
	    for(int i=0; i<=str1.length(); i++)
	        for(int j=0; j<=str2.length(); j++)
	            if(i==0||j==0)
	               dp[i][j] = 0;
	            else if(str1[i-1] == str2[j-1])
	                dp[i][j] = dp[i-1][j-1]+1;
	           else dp[i][j] = max(dp[i-1][j], dp[i][j-1]);
	   return dp[n][m];
	    
	}
    int longestPalindromeSubseq(string s) {
        string rev = s;
        reverse(rev.begin(), rev.end());
        int lcs = findLCS(s, rev);
        return lcs;
    }
};